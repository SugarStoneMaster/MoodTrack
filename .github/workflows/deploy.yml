name: Build, Deploy & Smoke Test

on:
  push:
    branches: [ main ]

permissions:
  contents: read
  id-token: write
  packages: write
  actions: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      IMAGE: ${{ secrets.ACR_LOGIN_SERVER }}/moodtrack-api:${{ github.sha }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          docker build --platform linux/amd64 -t $IMAGE .

      - name: Login to ACR
        uses: azure/docker-login@v2
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username:     ${{ secrets.ACR_USERNAME }}
          password:     ${{ secrets.ACR_PASSWORD }}

      - name: Push to ACR
        run: docker push $IMAGE

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Start AKS cluster if stopped
        run: |
          az aks start \
            --resource-group rg-moodtrack-dev \
            --name aks-moodtrack-dev
          az aks wait \
            --resource-group rg-moodtrack-dev \
            --name aks-moodtrack-dev \
            --created

      - name: Set AKS context
        uses: azure/aks-set-context@v3
        with:
          resource-group:       rg-moodtrack-dev
          cluster-name:         aks-moodtrack-dev
          subscription-id:      ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          use-admin-credentials: true

      - name: Rolling update Deployment
        run: |
          kubectl set image deployment/moodtrack-api \
            api=$IMAGE \
            -n moodtrack
          kubectl rollout status deployment/moodtrack-api \
            -n moodtrack --timeout=500s

      # --- smoke tests ---
      - name: Smoke test /health
        run: |
          echo "Testing /health..."
          HTTP_STATUS=$(curl -s -o /dev/null -w '%{http_code}' http://$(kubectl get svc ingress-controller -n moodtrack -o jsonpath='{.status.loadBalancer.ingress[0].ip}')/health)
          if [ "$HTTP_STATUS" != "200" ]; then
            echo "❌ /health returned $HTTP_STATUS"
            exit 1
          fi
          echo "✅ /health OK"

      - name: Smoke test /protected
        env:
          AZURE_TENANT: ${{ secrets.B2C_TENANT }}
          AZURE_CLIENT_ID: ${{ secrets.TENANT_CLIENT_API_ID }}
        run: |
          echo "Fetching B2C token via Azure CLI..."
          TOKEN=$(az account get-access-token \
            --tenant $AZURE_TENANT \
            --scope api://$AZURE_CLIENT_ID/.default \
            --query accessToken -o tsv)
          echo "Testing /protected endpoint..."
          HTTP_STATUS=$(curl -s -o /dev/null -w '%{http_code}' \
            -H "Authorization: Bearer $TOKEN" \
            http://$(kubectl get svc ingress-controller -n moodtrack -o jsonpath='{.status.loadBalancer.ingress[0].ip}')/protected)
          if [ "$HTTP_STATUS" != "200" ]; then
            echo "❌ /protected returned $HTTP_STATUS"
            exit 1
          fi
          echo "✅ /protected OK"