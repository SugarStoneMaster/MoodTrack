name: Build, Deploy & Smoke Test

on:
  push:
    branches: [ main ]

permissions:
  contents: read
  id-token: write
  packages: write
  actions: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      IMAGE: ${{ secrets.ACR_LOGIN_SERVER }}/moodtrack-api:${{ github.sha }}
      RESOURCE_GROUP: rg-moodtrack-dev
      CLUSTER_NAME: aks-moodtrack-dev
      NAMESPACE: moodtrack
      SERVICE_NAME: moodtrack-api-svc
      TEST_USER:  alice                     # di prova
      TEST_PASS:  wonderland

    steps:
    - uses: actions/checkout@v4

    - name: Build & Push image
      run: |
        docker build -t $IMAGE .
        echo ${{ secrets.ACR_PASSWORD }} | \
          docker login ${{ secrets.ACR_LOGIN_SERVER }} -u ${{ secrets.ACR_USERNAME }} --password-stdin
        docker push $IMAGE

    - name: Azure login (cluster)
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Ensure AKS running
      run: |
        STATE=$(az aks show -g $RESOURCE_GROUP -n $CLUSTER_NAME --query powerState.code -o tsv)
        if [[ "$STATE" == "Stopped"* ]]; then
          az aks start -g $RESOURCE_GROUP -n $CLUSTER_NAME
          az aks wait  -g $RESOURCE_GROUP -n $CLUSTER_NAME --created
        fi

    - name: Set kubectl context
      uses: azure/aks-set-context@v3
      with:
        resource-group: ${{ env.RESOURCE_GROUP }}
        cluster-name:  ${{ env.CLUSTER_NAME }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        use-admin-credentials: true

    - name: Rollout deployment
      run: |
        kubectl set image deployment/moodtrack-api api=$IMAGE -n $NAMESPACE
        kubectl rollout status deployment/moodtrack-api -n $NAMESPACE --timeout=300s

    # ---------- smoke tests ----------
    - name: Smoke test /health
      run: |
        LB=$(kubectl get svc $SERVICE_NAME -n $NAMESPACE -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
        STATUS=$(curl -s -o /dev/null -w '%{http_code}' http://$LB/health)
        [ "$STATUS" = "200" ] || { echo "/health -> $STATUS"; exit 1; }
        echo "/health OK"

    - name: Smoke test /entries with JWT
      run: |
        LB=$(kubectl get svc $SERVICE_NAME -n $NAMESPACE -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
        # 1) ottieni token
        TOKEN=$(curl -s -X POST http://$LB/token \
          -H "Content-Type: application/x-www-form-urlencoded" \
          -d "username=$TEST_USER&password=$TEST_PASS" | jq -r .access_token)
        if [ -z "$TOKEN" ] || [ "$TOKEN" = "null" ]; then
          echo "Impossibile ottenere il token"; exit 1
        fi
        # 2) chiama endpoint protetto
        STATUS=$(curl -s -o /dev/null -w '%{http_code}' \
          -H "Authorization: Bearer $TOKEN" \
          http://$LB/entries)
        [ "$STATUS" = "200" ] || { echo "/entries -> $STATUS"; exit 1; }
        echo "/entries OK"