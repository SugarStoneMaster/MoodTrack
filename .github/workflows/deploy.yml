name: Build & Deploy to AKS

on:
  push:
    branches: [ main ]

permissions:
  contents: read
  id-token: write            # necessario per OIDC (se lo usi)
  packages: write            # per Docker login
  actions: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build Docker image
      run: |
        IMAGE=${{ secrets.ACR_LOGIN_SERVER }}/moodtrack-api:${{ github.sha }}
        docker build --platform linux/amd64 -t $IMAGE .

    - name: Login to ACR
      uses: azure/docker-login@v2
      with:
        login-server: ${{ secrets.ACR_LOGIN_SERVER }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Push to ACR
      run: |
        docker push $IMAGE

    - name: Azure Login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        enable-AzPSSession: false

    - name: Set AKS context
      uses: azure/aks-set-context@v3
      with:
        resource-group: rg-moodtrack-dev
        cluster-name: aks-moodtrack-dev

    - name: Rolling update Deployment
      run: |
        kubectl set image deployment/moodtrack-api \
          api=${{ secrets.ACR_LOGIN_SERVER }}/moodtrack-api:${{ github.sha }} \
          -n moodtrack
        kubectl rollout status deployment/moodtrack-api \
          -n moodtrack --timeout=120s