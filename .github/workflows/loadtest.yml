name: On-demand Load Test

on:
  workflow_dispatch:
    inputs:
      api_base:
        description: "Base URL (es. http://4.232.242.251)"
        default: "http://4.232.242.251"
        required: true
        type: string
      vus:
        description: "Virtual users per engine"
        default: "50"
        type: number
      duration_s:
        description: "Durata (sec)"
        default: "200"
        type: number
      rampup_s:
        description: "Ramp-up (sec)"
        default: "100"
        type: number
      engines:
        description: "Engine instances"
        default: "1"
        type: number
      threshold_error_pct:
        description: "Soglia percentage(error)"
        default: "2"
        type: number
      threshold_avg_ms:
        description: "Soglia avg(response_time_ms)"
        default: "1500"
        type: number
      threshold_post_p95_ms:
        description: "Soglia p95 POST /entries (ms)"
        default: "700"
        type: number

jobs:
  run-alt:
    runs-on: ubuntu-latest
    env:
      ALT_RG:   ${{ vars.ALT_RG || 'rg-moodtrack-dev' }}
      ALT_NAME: ${{ vars.ALT_NAME || 'alt-moodtrack-dev' }}
      TEST_ID:  moodtrack-api-url
    steps:
      - name: Azure login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Install Azure Load Testing CLI extension
        run: |
          az extension add --name load --yes || az extension update --name load

      - name: Avvia test-run con parametri runtime
        run: |
          RUN_ID="run_$(date +%s)"
          echo "RUN_ID=$RUN_ID" >> $GITHUB_ENV

          az load test-run create \
            --resource-group "$ALT_RG" \
            --load-test-resource "$ALT_NAME" \
            --test-id "$TEST_ID" \
            --test-run-id "$RUN_ID" \
            --display-name "on-demand via GitHub Actions" \
            --env API_BASE=${{ inputs.api_base }} \
            --env VUS=${{ inputs.vus }} \
            --env DURATION=${{ inputs.duration_s }} \
            --env RAMPUP=${{ inputs.rampup_s }} \
            --env ENGINES=${{ inputs.engines }} \
            --env THRESHOLD_ERROR_PCT=${{ inputs.threshold_error_pct }} \
            --env THRESHOLD_AVG_MS=${{ inputs.threshold_avg_ms }} \
            --env THRESHOLD_POST_P95_MS=${{ inputs.threshold_post_p95_ms }}

      - name: Scarica risultati
        run: |
          mkdir -p alt-results
          az load test-run download-files \
            --resource-group "$ALT_RG" \
            --load-test-resource "$ALT_NAME" \
            --test-run-id "$RUN_ID" \
            --path alt-results

      - uses: actions/upload-artifact@v4
        with:
          name: alt-results
          path: alt-results