name: On-demand Load Test

on:
  workflow_dispatch:
    inputs:
      api_base:
        description: "Base URL (es. http://4.232.242.251)"
        default: "http://4.232.242.251"
        required: true
        type: string

jobs:
  run-alt:
    runs-on: ubuntu-latest
    env:
      ALT_RG:   ${{ vars.ALT_RG || 'rg-moodtrack-dev' }}
      ALT_NAME: ${{ vars.ALT_NAME || 'alt-moodtrack-dev' }}
      TEST_ID:  moodtrack-api-url
    steps:
      - uses: actions/checkout@v4

      - name: Azure login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Install Azure Load Testing CLI extension
        run: |
          set -euo pipefail
          az extension add --name load --yes || az extension update --name load
          az extension show --name load

      - name: Prepara working dir (patch solo API_BASE)
        run: |
          set -euo pipefail
          mkdir -p work
          cp loadtests/requests.json  work/requests.json
          cp loadtests/users.csv      work/users.csv || true
          cp loadtests/config.yaml    work/config.yaml
          # patch del valore API_BASE dentro testModel.environmentVariables
          sed -i -E 's|value: "http://REPLACE_ME"|value: "${{ inputs.api_base }}"|' work/config.yaml
          echo "----- config.yaml -----"; cat work/config.yaml

      - name: Crea/Aggiorna test in ALT (schema con testModel)
        working-directory: work
        run: |
          set -euo pipefail
          az load test create \
            --resource-group "$ALT_RG" \
            --load-test-resource "$ALT_NAME" \
            --test-id "$TEST_ID" \
            --load-test-config-file config.yaml

      - name: Avvia test-run
        working-directory: work
        run: |
          set -euo pipefail
          RUN_ID="run_$(date +%s)"
          echo "RUN_ID=$RUN_ID" >> $GITHUB_ENV
          az load test-run create \
            --resource-group "$ALT_RG" \
            --load-test-resource "$ALT_NAME" \
            --test-id "$TEST_ID" \
            --test-run-id "$RUN_ID" \
            --display-name "on-demand via GitHub Actions"

      - name: Scarica risultati
        run: |
          mkdir -p alt-results
          az load test-run download-files \
            --resource-group "$ALT_RG" \
            --load-test-resource "$ALT_NAME" \
            --test-run-id "$RUN_ID" \
            --path alt-results

      - uses: actions/upload-artifact@v4
        with:
          name: alt-results
          path: alt-results